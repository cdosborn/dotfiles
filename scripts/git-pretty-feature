#!/bin/bash

# Print a short list of commits merged from the feature into the target branch
#
# git pretty-feature $MERGE_COMMIT
#
main() {
    local MERGE_PARENTS=$(git log -1 --merges --pretty=format:%P "$1")
    local MERGE_BASE=$(oldest-merge-base $MERGE_PARENTS)
    echo "$MERGE_PARENTS" | { 
        read PARENT_SHA FEATURE_SHA; 
        git log --decorate --pretty=oneline --abbrev-commit "$MERGE_BASE".."$FEATURE_SHA";
    }
}

oldest-merge-base() {
    local COMMON_ANCESTOR=""
    while read sha1 <&3  && read sha2 <&4
    do
        if [ "$sha1" == "$sha2" ];
        then
            COMMON_ANCESTOR="$sha1";
        else
            # Break at the first occurence where the history diverged
            if [ -n "$COMMON_ANCESTOR" ];
            then
                echo $COMMON_ANCESTOR;
            fi;
            break;
        fi;

    done 3< <(git rev-list --reverse --first-parent "$1") 4< <(git rev-list --reverse  --first-parent "$2")
}
main $@
